blueprint:
  name: Wood Stove State Monitor v3.6
  description: >
    Monitor a wood stove's temperature sensor and update a helper entity's state based on temperature changes.
  domain: automation
  input:
    temperature_sensor:
      name: Temperature Sensor
      description: The sensor providing the wood stove's temperature.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    stove_state:
      name: Stove State Helper
      description: The helper entity to track the stove's state.
      selector:
        entity:
          domain: input_text
    threshold_off:
      name: Off Threshold
      description: Temperature threshold below which the stove is considered off.
      default: 85
      selector:
        number:
          min: 50
          max: 200
          step: 1
    threshold_fire_starting:
      name: Fire Starting Threshold
      description: Temperature threshold above which the fire is considered starting.
      default: 100
      selector:
        number:
          min: 50
          max: 200
          step: 1
    threshold_burning:
      name: Burning Threshold
      description: Temperature threshold above which the fire is actively burning.
      default: 250
      selector:
        number:
          min: 200
          max: 400
          step: 1
    threshold_cooling_down:
      name: Cooling Down Threshold
      description: Temperature threshold below which the fire is cooling down.
      default: 180
      selector:
        number:
          min: 100
          max: 250
          step: 1
    offset_warming_up_1:
      name: Warming Up 1 Offset
      description: Offset added to Fire Starting threshold for Warming Up 1.
      default: 20
      selector:
        number:
          min: 0
          max: 50
          step: 1
    offset_warming_up_2:
      name: Warming Up 2 Offset
      description: Offset added to Cooling Down threshold for Warming Up 2.
      default: 20
      selector:
        number:
          min: 0
          max: 50
          step: 1

mode: restart
trigger:
  - platform: state
    entity_id: !input temperature_sensor
  - platform: homeassistant
    event: start

action:
  - delay: "00:00:10"  # Allow time for sensors to initialize
  - variables:
      temp: "{{ states(input.temperature_sensor) | float }}"
      fire_starting: "{{ input.threshold_fire_starting | float }}"
      burning: "{{ input.threshold_burning | float }}"
      cooling_down: "{{ input.threshold_cooling_down | float }}"
      off_threshold: "{{ input.threshold_off | float }}"
      warming_up_1: "{{ fire_starting + (input.offset_warming_up_1 | float) }}"
      warming_up_2: "{{ cooling_down + (input.offset_warming_up_2 | float) }}"
      current_state: "{{ states[stove_state] | default('') }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ temp < off_threshold }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Off"

      - conditions:
          - condition: template
            value_template: "{{ temp >= fire_starting and temp < warming_up_1 }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Fire Starting"

      - conditions:
          - condition: template
            value_template: "{{ temp >= warming_up_1 and temp < burning }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Warming Up"

      - conditions:
          - condition: template
            value_template: "{{ temp >= burning }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Burning"

      - conditions:
          - condition: template
            value_template: "{{ current_state == 'Burning' and temp < cooling_down }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Cooling"

      - conditions:
          - condition: template
            value_template: "{{ current_state == 'Cooling' and temp > warming_up_2 }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Warming Up"

      - conditions:
          - condition: template
            value_template: "{{ current_state == 'Cooling' and temp < off_threshold }}"
        sequence:
          - service: input_text.set_value
            target:
              entity_id: !input stove_state
            data:
              value: "Off"
