blueprint:
  name: Wood Stove State Tracker v1.11
  description: Tracks the state of a wood stove based on temperature sensor input with five states.
  domain: automation
  input:
    temperature_sensor:
      name: Temperature Sensor
      description: The sensor measuring the wood stove temperature.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    fire_starting_threshold:
      name: Fire Starting Threshold
      description: Temperature at which the stove is considered to be starting a fire.
      default: 100
      selector:
        number:
          min: 80
          max: 200
          unit_of_measurement: "째F"
    burning_threshold:
      name: Burning Threshold
      description: Temperature at which the stove is actively burning.
      default: 250
      selector:
        number:
          min: 120
          max: 500
          unit_of_measurement: "째F"
    cooling_threshold:
      name: Cooling Threshold
      description: Temperature at which the stove is considered cooling down.
      default: 200
      selector:
        number:
          min: 100
          max: 300
          unit_of_measurement: "째F"
    warming_up_offset:
      name: Warming Up Offset
      description: The additional degrees above the current state that determines the warming threshold.
      default: 20
      selector:
        number:
          min: 10
          max: 50
          unit_of_measurement: "째F"
    stove_state_helper:
      name: Stove State Helper
      description: An input_select to track the state.
      selector:
        entity:
          domain: input_select

mode: restart
max_exceeded: silent

variables:
  fire_starting_threshold: !input fire_starting_threshold
  cooling_threshold: !input cooling_threshold
  warming_up_offset: !input warming_up_offset
  stove_state: "{{ states('input_select.stove_state_helper') }}"
  warming_threshold: >-
    {% if stove_state == 'Fire Starting' %}
      {{ fire_starting_threshold | float + warming_up_offset | float }}
    {% elif stove_state == 'Cooling Down' %}
      {{ cooling_threshold | float + warming_up_offset | float }}
    {% else %}
      {{ fire_starting_threshold | float + warming_up_offset | float }}  # Default
    {% endif %}

trigger:
  - platform: numeric_state
    entity_id: !input temperature_sensor
    above: !input fire_starting_threshold
    id: "fire_starting"

  - platform: template  # Using template trigger for dynamic warming threshold
    value_template: "{{ states('sensor.temperature_sensor') | float > warming_threshold | float }}"
    id: "warming_up"

  - platform: numeric_state  # Keeping numeric state for burning to work reliably
    entity_id: !input temperature_sensor
    above: !input burning_threshold
    id: "burning"

  - platform: numeric_state
    entity_id: !input temperature_sensor
    below: !input cooling_threshold
    id: "cooling_down"

  - platform: numeric_state
    entity_id: !input temperature_sensor
    below: !input fire_starting_threshold
    id: "off"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: "fire_starting"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input stove_state_helper
            data:
              option: "Fire Starting"

      - conditions:
          - condition: trigger
            id: "warming_up"
          - condition: template
            value_template: "{{ states('input_select.stove_state_helper') in ['Cooling Down', 'Fire Starting', 'Off'] }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input stove_state_helper
            data:
              option: "Warming Up"

      - conditions:
          - condition: trigger
            id: "burning"
          - condition: template
            value_template: "{{ states('input_select.stove_state_helper') == 'Warming Up' }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input stove_state_helper
            data:
              option: "Burning"

      - conditions:
          - condition: trigger
            id: "cooling_down"
          - condition: template
            value_template: "{{ states('input_select.stove_state_helper') == 'Burning' }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input stove_state_helper
            data:
              option: "Cooling Down"

      - conditions:
          - condition: trigger
            id: "off"
          - condition: template
            value_template: "{{ states('input_select.stove_state_helper') == 'Cooling Down' }}"
        sequence:
          - service: input_select.select_option
            target:
              entity_id: !input stove_state_helper
            data:
              option: "Off"
